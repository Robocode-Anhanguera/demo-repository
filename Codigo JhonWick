package sample;

import robocode.*;
import static robocode.util.Utils.normalRelativeAngleDegrees;
import java.awt.*;
 
public class jhonwick3 extends AdvancedRobot {
	boolean movingForward;
	boolean inWall;
 
	public void run() {
	
		setBodyColor(new Color(221, 175, 19));
		setGunColor(new Color(11,77,113));
		setRadarColor(new Color(99,228,199));
		setBulletColor(new Color(255,238,0));
		setScanColor(new Color(255,241,46));
 
	
		setAdjustRadarForRobotTurn(true);
		setAdjustGunForRobotTurn(true);
		setAdjustRadarForGunTurn(true);
 
	
		if (getX() <= 50 || getY() <= 50 || getBattleFieldWidth() - getX() <= 50 || getBattleFieldHeight() - getY() <= 50) {
				inWall = true;
			} else {
			inWall = false;
		}
 
		setAhead(40000);
		setTurnRadarRight(360);
		movingForward = true;
 
		while (true) {
		
			if (getX() > 50 && getY() > 50 && getBattleFieldWidth() - getX() > 50 && getBattleFieldHeight() - getY() > 50 && inWall == true) {
				inWall = false;
			}
			if (getX() <= 50 || getY() <= 50 || getBattleFieldWidth() - getX() <= 50 || getBattleFieldHeight() - getY() <= 50 ) {
				if ( inWall == false){
					reverseDirection();
					inWall = true;
				}
			}
 
		
			if (getRadarTurnRemaining() == 0.0){
			setTurnRadarRight(360);
			}
 
			execute();
 
		}
	}
 
 
 

	public void onHitWall(HitWallEvent e) {
		
		reverseDirection();
	}
 

	public void reverseDirection() {
		if (movingForward) {
			setBack(40000);
			movingForward = false;
		} else {
			setAhead(40000);
			movingForward = true;
		}
	}
 
 
	public void onScannedRobot(ScannedRobotEvent e) {
	
		double absoluteBearing = getHeading() + e.getBearing();
		double bearingFromGun = normalRelativeAngleDegrees(absoluteBearing - getGunHeading());
		double bearingFromRadar = normalRelativeAngleDegrees(absoluteBearing - getRadarHeading());
 
	
		if (movingForward){
			setTurnRight(normalRelativeAngleDegrees(e.getBearing() + 80));
		} else {
			setTurnRight(normalRelativeAngleDegrees(e.getBearing() + 100));
		}
 
 
	
		if (Math.abs(bearingFromGun) <= 4) {
			setTurnGunRight(bearingFromGun); 
			setTurnRadarRight(bearingFromRadar);
			if (getGunHeat() == 0 && getEnergy() > .2) {
				fire(Math.min(1.5 - Math.abs(bearingFromGun) / 1.5 - e.getDistance() / 250, getEnergy() - .1));
			} 
		}
		else {
			setTurnGunRight(bearingFromGun);
			setTurnRadarRight(bearingFromRadar);
		}
	
		if (bearingFromGun == 0) {
			scan();
		}
	}		
 

	public void onHitRobot(HitRobotEvent e) {
	
		if (e.isMyFault()) {
			reverseDirection();
		}
	}
}
